version: '3.8'

services:
  # 应用服务
  lazy-admin:
    build: .
    container_name: lazy-admin
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/lazy_admin?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root123
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=redis123
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - lazy-admin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: lazy-admin-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=lazy_admin
      - MYSQL_USER=lazy_admin
      - MYSQL_PASSWORD=lazy123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/lazy_admin_v2.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - lazy-admin-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: lazy-admin-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - lazy-admin-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: lazy-admin-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - lazy-admin
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    networks:
      - lazy-admin-network

volumes:
  mysql_data:
  redis_data:

networks:
  lazy-admin-network:
    driver: bridge 